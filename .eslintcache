[{"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\index.js":"1","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\App.js":"2","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\Routes.js":"3","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Home.js":"4","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Base.js":"5","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Menu.js":"6","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signup.js":"7","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signin.js":"8","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\index.js":"9","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\backend.js":"10","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"11","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"12","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\UserDashBoard.js":"13","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AdminDashBoard.js":"14","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddCategory.js":"15","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\adminapicall.js":"16","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageCategory.js":"17","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddProduct.js":"18","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageProducts.js":"19","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateProduct.js":"20","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateCategory.js":"21","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Card.js":"22","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\ImageHelper.js":"23","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\coreapicalls.js":"24","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\cartHelper.js":"25"},{"size":177,"mtime":1608233149058,"results":"26","hashOfConfig":"27"},{"size":528,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1960,"mtime":1608476405046,"results":"29","hashOfConfig":"27"},{"size":1295,"mtime":1608658474577,"results":"30","hashOfConfig":"27"},{"size":1011,"mtime":1608310168132,"results":"31","hashOfConfig":"27"},{"size":2941,"mtime":1608489660251,"results":"32","hashOfConfig":"27"},{"size":3705,"mtime":1608313727386,"results":"33","hashOfConfig":"27"},{"size":3584,"mtime":1608413347674,"results":"34","hashOfConfig":"27"},{"size":1598,"mtime":1608490673403,"results":"35","hashOfConfig":"27"},{"size":51,"mtime":1608311012445,"results":"36","hashOfConfig":"27"},{"size":641,"mtime":1608413092646,"results":"37","hashOfConfig":"27"},{"size":608,"mtime":1608399590962,"results":"38","hashOfConfig":"27"},{"size":264,"mtime":1608412255531,"results":"39","hashOfConfig":"27"},{"size":2855,"mtime":1608489182342,"results":"40","hashOfConfig":"27"},{"size":2697,"mtime":1608459749248,"results":"41","hashOfConfig":"27"},{"size":3725,"mtime":1608482247119,"results":"42","hashOfConfig":"27"},{"size":4419,"mtime":1608495684832,"results":"43","hashOfConfig":"27"},{"size":5284,"mtime":1608483520672,"results":"44","hashOfConfig":"27"},{"size":4540,"mtime":1608496104886,"results":"45","hashOfConfig":"27"},{"size":6205,"mtime":1608500982144,"results":"46","hashOfConfig":"27"},{"size":3593,"mtime":1608485372679,"results":"47","hashOfConfig":"27"},{"size":2039,"mtime":1608663662487,"results":"48","hashOfConfig":"27"},{"size":584,"mtime":1608639777049,"results":"49","hashOfConfig":"27"},{"size":339,"mtime":1608656921237,"results":"50","hashOfConfig":"27"},{"size":358,"mtime":1608663836935,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ckpdaw",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\index.js",[],["111","112"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\App.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\Routes.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Home.js",["113"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Base.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Menu.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signup.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signin.js",["114"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Base from \"../core/Base\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth/helper\";\r\n\r\nconst Signin = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"j.doe@mail.com\",\r\n    password: \"12345\",\r\n    error: \"\",\r\n    loading: false,\r\n    didRedirect: false,\r\n  });\r\n\r\n  const { email, password, error, loading, didRedirect } = values;\r\n  const { user } = isAuthenticated();\r\n\r\n  // Handle form fields value change\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  // On Form Submit\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    signin({ email, password })\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setValues({\r\n            ...values,\r\n            error: data.err ? data.err : data.error,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              didRedirect: true,\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // Perform User Redirection\r\n  const performRedirect = () => {\r\n    if (didRedirect) {\r\n      if (user && user.role === 1) {\r\n        return <Redirect to=\"/admin/dashboard\" />;\r\n      } else {\r\n        return <Redirect to=\"/user/dashboard\" />;\r\n      }\r\n    }\r\n\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  // Loading Message\r\n  const loadingMessage = () => {\r\n    return (\r\n      loading && (\r\n        <div className=\"alert alert-info\">\r\n          <h2>Loading...</h2>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  // Error Message\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Signin Form\r\n  const signInForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-light\">Email</label>\r\n              <input\r\n                onChange={handleChange(\"email\")}\r\n                value={email}\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-light\">Password</label>\r\n              <input\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Sign In page\" description=\"A page for Sign In\">\r\n      {loadingMessage()}\r\n      {errorMessage()}\r\n      {signInForm()}\r\n      {performRedirect()}\r\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\index.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\backend.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",["115"],"import React, { Children } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",["116"],"import React, { Children } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\UserDashBoard.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AdminDashBoard.js",["117"],"import React from \"react\";\r\n\r\n// Components\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashBoard = () => {\r\n  const {\r\n    user: { name, email, role },\r\n  } = isAuthenticated();\r\n\r\n  // Left Side Menu of Admin Dashboard\r\n  const adminLeftSide = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\r\n              <i className=\"far fa-plus-square pr-2\"></i> Create Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\r\n              <i className=\"fas fa-tasks pr-2\"></i> Manage Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\r\n              <i className=\"fas fa-box pr-2\"></i> Create Product\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\r\n              <i className=\"fas fa-boxes pr-2\"></i> Manage Products\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\r\n              <i className=\"fa fa-clipboard pr-2\"></i> Manage Orders\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Right Side Display Box of Admin Dashboard\r\n  const adminRightSide = () => {\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <h4 className=\"card-header\">Admin Information</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge badge-success mr-2\">Name:</span> {name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge badge-success mr-2\">Email:</span> {email}\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge badge-danger mr-2\">Admin Area</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      title=\"Admin Dashboard\"\r\n      description=\"Welcome to the Admin Area\"\r\n      className=\"container bg-success p-4\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-6 col-sm-12 my-1\">\r\n          {adminLeftSide()}\r\n        </div>\r\n        <div className=\"col-lg-8 col-md-6 col-sm-12 my-1\">\r\n          {adminRightSide()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AdminDashBoard;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddCategory.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageCategory.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddProduct.js",["118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { createProduct, getAllCategories } from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\nconst AddProduct = () => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getARedirect: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    photo,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getARedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  // Preload values of Categories to display in form select option\r\n  const preload = () => {\r\n    getAllCategories().then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({ ...values, categories: data, formData: new FormData() });\r\n      }\r\n    });\r\n  };\r\n\r\n  // On Submit Method\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createProduct(user._id, token, formData)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setValues({ ...values, error: data.err });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            stock: \"\",\r\n            photo: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n          });\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  // Handle Change Method\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      {createdProduct} was Added Successfully!\r\n    </div>\r\n  );\r\n\r\n  // Error Message\r\n  const errorMessage = () => (\r\n    <div\r\n      className=\"alert alert-danger mt-3\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      Failed to add {createdProduct}!\r\n    </div>\r\n  );\r\n\r\n  // Create Product Form\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n          required\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((item, index) => (\r\n              <option key={index} value={item._id}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Add Product\"\r\n      description=\"Add a New Product here.\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageProducts.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateProduct.js",["123","124","125","126","127"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport {\r\n  getAllCategories,\r\n  getAProduct,\r\n  updateProduct,\r\n} from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getARedirect: false,\r\n    formData: \"\",\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    photo,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getARedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  useEffect(() => {\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  // Preload values of Categories to display in form select option\r\n  const preload = (productId) => {\r\n    getAProduct(productId).then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData(),\r\n        });\r\n        preloadCategories();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Preload Categories\r\n  const preloadCategories = () => {\r\n    getAllCategories().then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({\r\n          categories: data,\r\n          formData: new FormData(),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // On Submit Method\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n\r\n    // UPDATE PRoducts\r\n    updateProduct(match.params.productId, user._id, token, formData)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setValues({ ...values, error: data.err });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            stock: \"\",\r\n            photo: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    setTimeout(() => {\r\n      setRedirect(true);\r\n    }, 2000);\r\n  };\r\n\r\n  // Handle Change Method\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      {createdProduct} was Updated Successfully!\r\n    </div>\r\n  );\r\n\r\n  // Error Message\r\n  const errorMessage = () => (\r\n    <div\r\n      className=\"alert alert-danger mt-3\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      Failed to Update {createdProduct}!\r\n    </div>\r\n  );\r\n\r\n  // Create Product Form\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Update photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n          required\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((item, index) => (\r\n              <option key={index} value={item._id}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-info mb-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Update Product\"\r\n      description=\"Update the Product here.\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {createProductForm()}\r\n          {redirect && <Redirect to=\"/admin/products\" />}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateCategory.js",["128"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getACategory, updateCategory } from \"./helper/adminapicall\";\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    preload(match.params.categoryId);\r\n  }, []);\r\n\r\n  // Preload - Load the Category\r\n  const preload = (categoryId) => {\r\n    setError(false);\r\n    setSuccess(false);\r\n    getACategory(categoryId)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setError(data.err ? data.err : data.error);\r\n        } else {\r\n          setError(false);\r\n          setCategory(data.name);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // Handle Form Input Change\r\n  const handleChange = (event) => {\r\n    setError(false);\r\n    setSuccess(false);\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  // On Form Submit\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n\r\n    // Update Category\r\n    updateCategory(match.params.categoryId, user._id, token, { name: category })\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setError(data.err ? data.err : data.error);\r\n        } else {\r\n          setCategory(data.name);\r\n          setSuccess(true);\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(true);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => {\r\n    if (success)\r\n      return (\r\n        <div className=\"alert alert-success\">\r\n          {category} updated Successfully!\r\n        </div>\r\n      );\r\n  };\r\n\r\n  // Error Message\r\n  const errorMessage = () => {\r\n    if (error)\r\n      return (\r\n        <div className=\"alert alert-danger\">\r\n          Failed to update {category}!<p>Error: {error}</p>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  // Category Input Form\r\n  const categoryForm = () => {\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <p className=\"lead mt-2\">Update the Category</p>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control my-3\"\r\n            onChange={handleChange}\r\n            value={category}\r\n            autoFocus\r\n            required\r\n            placeholder=\"Category\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-info\">\r\n            Update Category\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      title=\"Update Category\"\r\n      description=\"Update the categroy here\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <div className=\"\">\r\n        <Link className=\"btn btn-md btn-dark mb-3\" to=\"/admin/dashboard\">\r\n          Admin Home\r\n        </Link>\r\n      </div>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-2 my-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {categoryForm()}\r\n          {redirect && <Redirect to=\"/admin/categories\" />}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Card.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\ImageHelper.js",["129"],"import React from \"react\";\r\nimport { API } from \"../../backend\";\r\n\r\nconst ImageHelper = ({ product }) => {\r\n  const imageURL = product\r\n    ? `${API}/product/photo/${product._id}`\r\n    : \"https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n\r\n  return (\r\n    <div className=\"rounded border border-success p-2\">\r\n      <img\r\n        src={imageURL}\r\n        alt=\"photo\"\r\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        className=\"mb-3 rounded\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageHelper;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\cartHelper.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":11,"column":10,"nodeType":"136","messageId":"137","endLine":11,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"140","line":10,"column":26,"nodeType":"136","messageId":"137","endLine":10,"endColumn":30},{"ruleId":"134","severity":1,"message":"141","line":32,"column":5,"nodeType":"136","messageId":"137","endLine":32,"endColumn":10},{"ruleId":"134","severity":1,"message":"142","line":34,"column":5,"nodeType":"136","messageId":"137","endLine":34,"endColumn":13},{"ruleId":"134","severity":1,"message":"143","line":35,"column":5,"nodeType":"136","messageId":"137","endLine":35,"endColumn":12},{"ruleId":"134","severity":1,"message":"144","line":38,"column":5,"nodeType":"136","messageId":"137","endLine":38,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":44,"column":6,"nodeType":"147","endLine":44,"endColumn":8,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"141","line":37,"column":5,"nodeType":"136","messageId":"137","endLine":37,"endColumn":10},{"ruleId":"134","severity":1,"message":"142","line":39,"column":5,"nodeType":"136","messageId":"137","endLine":39,"endColumn":13},{"ruleId":"134","severity":1,"message":"143","line":40,"column":5,"nodeType":"136","messageId":"137","endLine":40,"endColumn":12},{"ruleId":"134","severity":1,"message":"144","line":43,"column":5,"nodeType":"136","messageId":"137","endLine":43,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":49,"column":6,"nodeType":"147","endLine":49,"endColumn":8,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"151","line":20,"column":6,"nodeType":"147","endLine":20,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":7,"nodeType":"155","endLine":16,"endColumn":9},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Children' is defined but never used.","'role' is assigned a value but never used.","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getARedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["160"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [preload]",{"range":"167","text":"168"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"169","text":"170"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"171","text":"172"},[892,894],"[preload]",[1012,1014],"[match.params.productId, preload]",[661,663],"[match.params.categoryId]"]