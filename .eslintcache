[{"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\index.js":"1","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\App.js":"2","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\Routes.js":"3","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Home.js":"4","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Base.js":"5","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Menu.js":"6","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signup.js":"7","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signin.js":"8","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\index.js":"9","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\backend.js":"10","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"11","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"12","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\UserDashBoard.js":"13","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AdminDashBoard.js":"14","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddCategory.js":"15","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\adminapicall.js":"16","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageCategory.js":"17","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddProduct.js":"18","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageProducts.js":"19","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateProduct.js":"20","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateCategory.js":"21","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Card.js":"22","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\ImageHelper.js":"23","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\coreapicalls.js":"24","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\cartHelper.js":"25","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Cart.js":"26","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Payment.js":"27","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\orderHelper.js":"28","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\paymentHelper.js":"29","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageOrders.js":"30","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\cartContext.js":"31","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\CartState.js":"32","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\cartReducer.js":"33","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\types.js":"34","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateOrder.js":"35","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\orderHelper.js":"36","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\DashboardItem.js":"37","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Orders.js":"38","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\DashboardItems.js":"39","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Profile.js":"40","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\helper\\userapicalls.js":"41","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Address.js":"42","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AddNewAddress.js":"43"},{"size":177,"mtime":1608233149058,"results":"44","hashOfConfig":"45"},{"size":528,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":3060,"mtime":1609676829723,"results":"47","hashOfConfig":"45"},{"size":1363,"mtime":1609706702482,"results":"48","hashOfConfig":"45"},{"size":1060,"mtime":1609703319513,"results":"49","hashOfConfig":"45"},{"size":5634,"mtime":1609691605137,"results":"50","hashOfConfig":"45"},{"size":5459,"mtime":1609709484548,"results":"51","hashOfConfig":"45"},{"size":3703,"mtime":1609709275156,"results":"52","hashOfConfig":"45"},{"size":1598,"mtime":1608844123245,"results":"53","hashOfConfig":"45"},{"size":51,"mtime":1608311012445,"results":"54","hashOfConfig":"45"},{"size":641,"mtime":1608413092646,"results":"55","hashOfConfig":"45"},{"size":608,"mtime":1608399590962,"results":"56","hashOfConfig":"45"},{"size":417,"mtime":1609083810392,"results":"57","hashOfConfig":"45"},{"size":3721,"mtime":1609704977432,"results":"58","hashOfConfig":"45"},{"size":2732,"mtime":1608846393054,"results":"59","hashOfConfig":"45"},{"size":5319,"mtime":1608921423045,"results":"60","hashOfConfig":"45"},{"size":6078,"mtime":1609163668447,"results":"61","hashOfConfig":"45"},{"size":5459,"mtime":1608846499429,"results":"62","hashOfConfig":"45"},{"size":6800,"mtime":1609163438851,"results":"63","hashOfConfig":"45"},{"size":6496,"mtime":1609336374442,"results":"64","hashOfConfig":"45"},{"size":3761,"mtime":1609093110810,"results":"65","hashOfConfig":"45"},{"size":4078,"mtime":1609706904639,"results":"66","hashOfConfig":"45"},{"size":577,"mtime":1609705362516,"results":"67","hashOfConfig":"45"},{"size":665,"mtime":1609074411015,"results":"68","hashOfConfig":"45"},{"size":2349,"mtime":1608812035444,"results":"69","hashOfConfig":"45"},{"size":1617,"mtime":1609707310109,"results":"70","hashOfConfig":"45"},{"size":5654,"mtime":1609701611288,"results":"71","hashOfConfig":"45"},{"size":504,"mtime":1608740766909,"results":"72","hashOfConfig":"45"},{"size":932,"mtime":1608723812941,"results":"73","hashOfConfig":"45"},{"size":6923,"mtime":1609329843280,"results":"74","hashOfConfig":"45"},{"size":111,"mtime":1608841065813,"results":"75","hashOfConfig":"45"},{"size":722,"mtime":1608842615588,"results":"76","hashOfConfig":"45"},{"size":250,"mtime":1608841810255,"results":"77","hashOfConfig":"45"},{"size":61,"mtime":1608841551852,"results":"78","hashOfConfig":"45"},{"size":11215,"mtime":1609699169386,"results":"79","hashOfConfig":"45"},{"size":610,"mtime":1608910334669,"results":"80","hashOfConfig":"45"},{"size":1354,"mtime":1609704607019,"results":"81","hashOfConfig":"45"},{"size":4487,"mtime":1609329895608,"results":"82","hashOfConfig":"45"},{"size":656,"mtime":1609094302715,"results":"83","hashOfConfig":"45"},{"size":15627,"mtime":1609673294487,"results":"84","hashOfConfig":"45"},{"size":2735,"mtime":1609688204009,"results":"85","hashOfConfig":"45"},{"size":4299,"mtime":1609708730140,"results":"86","hashOfConfig":"45"},{"size":8218,"mtime":1609693944340,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ckpdaw",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\index.js",[],["186","187"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\App.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\Routes.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Home.js",["188"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Base.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Menu.js",["189","190"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signup.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Signin.js",["191"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\index.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\backend.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",["192"],"import React, { Children } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",["193"],"import React, { Children } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\UserDashBoard.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AdminDashBoard.js",["194"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddCategory.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageCategory.js",["195"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { deleteCategory, getAllCategories } from \"./helper/adminapicall\";\r\n\r\nconst ManageCategory = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const searchText = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  // Preload Products\r\n  const preload = () => {\r\n    getAllCategories()\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          console.log(data.err ? data.err : data.error);\r\n        } else {\r\n          setCategories(data);\r\n          setItems(data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // Delete this Category\r\n  const deleteThisCategory = (categoryId) => {\r\n    deleteCategory(categoryId, user._id, token).then((data) => {\r\n      if (data.err || data.error) {\r\n        console.log(data.err ? data.err : data.error);\r\n      } else {\r\n        preload();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle Search Field Input Change\r\n  const handleSearchChange = (e) => {\r\n    // console.log(\"Text: \", e.target.value);\r\n    let tempFiltered = [];\r\n    if (e.target.value !== \"\") {\r\n      // Filter Orders\r\n\r\n      // console.log(orders);\r\n      tempFiltered = categories.filter((category) => {\r\n        const regexp = new RegExp(`${e.target.value}`, \"gi\");\r\n        return (\r\n          // order._id.match(regexp) ||\r\n          category.name.match(regexp)\r\n        );\r\n      });\r\n\r\n      setFiltered(tempFiltered);\r\n      setItems(tempFiltered);\r\n      // console.log(\"Filtered: \", filtered);\r\n    } else {\r\n      // Clear Filter\r\n      setFiltered(tempFiltered);\r\n      setItems(categories);\r\n      // console.log(\"Filtered Cleared: \", filtered);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      title=\"Manage Categories\"\r\n      description=\"Manage all of your categories here\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-12\">\r\n          <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n            <span className=\"\">Admin Home</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-sm-12 mt-2 mt-md-0\" align=\"right\">\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by Category Name...\"\r\n              className=\"form-control transparent text-light\"\r\n              style={{ background: \"rgb(0,0,0,0)\" }}\r\n              ref={searchText}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"mt-2 mb-4\">All Categories ({categories.length}) :</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          {/* <h2 className=\"text-center text-white my-3\">\r\n            Total {categories.length} categories\r\n          </h2> */}\r\n          {/* {categories &&\r\n            categories.map((category, index) => (\r\n              <div key={index} className=\"row text-center mb-2 \">\r\n                <div className=\"col-4\">\r\n                  <h3 className=\"text-white text-left\">{category.name}</h3>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <Link\r\n                    className=\"btn btn-success\"\r\n                    to={`/admin/category/update/${category._id}`}\r\n                  >\r\n                    <span className=\"\">Update</span>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteThisCategory(category._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))} */}\r\n          {/*  */}\r\n\r\n          {/*  */}\r\n          {/*  */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8 col-sm-12 col-xs-12\">\r\n          <table className=\"table table-responsive-sm table-hover table-dark table-striped\">\r\n            <caption>List of Categories</caption>{\" \"}\r\n            <thead>\r\n              <tr className=\"text-center\">\r\n                <th scope=\"col\" className=\"border border-info h4\">\r\n                  Categories\r\n                </th>\r\n                <th scope=\"col\" className=\"border border-info h4\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items &&\r\n                items.map((category, index) => (\r\n                  <tr key={index} className=\"text-center\">\r\n                    <td className=\"border border-info\">{category.name}</td>\r\n                    <td className=\"border border-info\">\r\n                      <Link\r\n                        className=\"btn btn-success btn-sm rounded\"\r\n                        to={`/admin/category/update/${category._id}`}\r\n                      >\r\n                        Update <i className=\"far fa-edit d-none d-sm-inline\" />\r\n                      </Link>\r\n                      <span className=\"mx-1\"></span>\r\n                      <Link\r\n                        onClick={() => {\r\n                          deleteThisCategory(category._id);\r\n                        }}\r\n                        className=\"btn btn-danger btn-sm rounded\"\r\n                        to=\"#!\"\r\n                      >\r\n                        Delete{\" \"}\r\n                        <i className=\"far fa-trash-alt d-none d-sm-inline\" />\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ManageCategory;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\AddProduct.js",["196","197","198","199","200"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { createProduct, getAllCategories } from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\nconst AddProduct = () => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getARedirect: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    photo,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getARedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  // Preload values of Categories to display in form select option\r\n  const preload = () => {\r\n    getAllCategories().then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({ ...values, categories: data, formData: new FormData() });\r\n      }\r\n    });\r\n  };\r\n\r\n  // On Submit Method\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createProduct(user._id, token, formData)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setValues({ ...values, error: data.err });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            stock: \"\",\r\n            photo: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n          });\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  // Handle Change Method\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      {createdProduct} was Added Successfully!\r\n    </div>\r\n  );\r\n\r\n  // Error Message\r\n  const errorMessage = () => (\r\n    <div\r\n      className=\"alert alert-danger mt-3\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      Failed to add {createdProduct}!\r\n    </div>\r\n  );\r\n\r\n  // Create Product Form\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Add Photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Product Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Product Description</label>\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Product Category</label>\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n          required\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((item, index) => (\r\n              <option key={index} value={item._id}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Stock</label>\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Add Product\"\r\n      description=\"Add a New Product\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageProducts.js",["201"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { deleteProduct, getAllProducts } from \"./helper/adminapicall\";\r\n\r\nconst ManageProducts = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const searchText = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  // Preload Products\r\n  const preload = () => {\r\n    getAllProducts()\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          console.log(data.err ? data.err : data.error);\r\n        } else {\r\n          setProducts(data);\r\n          setItems(data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // deleteThisProduct - Delete a Product\r\n  const deleteThisProduct = (productId) => {\r\n    deleteProduct(productId, user._id, token).then((data) => {\r\n      if (data.err || data.error) {\r\n        console.log(data.err ? data.err : data.error);\r\n      } else {\r\n        preload(); // Loading preload again to reload data and react component\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle Search Field Input Change\r\n  const handleSearchChange = (e) => {\r\n    // console.log(\"Text: \", e.target.value);\r\n    let tempFiltered = [];\r\n    if (e.target.value !== \"\") {\r\n      // Filter Orders\r\n\r\n      // console.log(orders);\r\n      tempFiltered = products.filter((product) => {\r\n        const regexp = new RegExp(`${e.target.value}`, \"gi\");\r\n        return (\r\n          // order._id.match(regexp) ||\r\n          product.name.match(regexp)\r\n        );\r\n      });\r\n\r\n      setFiltered(tempFiltered);\r\n      setItems(tempFiltered);\r\n      // console.log(\"Filtered: \", filtered);\r\n    } else {\r\n      // Clear Filter\r\n      setFiltered(tempFiltered);\r\n      setItems(products);\r\n      // console.log(\"Filtered Cleared: \", filtered);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Manage Products\" description=\"Manage your products here\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-12\">\r\n          <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n            <span className=\"\">Admin Home</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-sm-12 mt-2 mt-md-0\" align=\"right\">\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by Product Name...\"\r\n              className=\"form-control transparent text-light\"\r\n              style={{ background: \"rgb(0,0,0,0)\" }}\r\n              ref={searchText}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"mt-2 mb-4\">All products ({products.length}) :</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          {/* <h2 className=\"text-center text-white my-3\">\r\n            Total {products.length} products\r\n          </h2> */}\r\n\r\n          {/* {products.map((product, index) => {\r\n            return (\r\n              <div key={index} className=\"row text-center mb-2 \">\r\n                <div className=\"col-4\">\r\n                  <h3 className=\"text-white text-left\">{product.name}</h3>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <Link\r\n                    className=\"btn btn-success\"\r\n                    to={`/admin/product/update/${product._id}`}\r\n                  >\r\n                    <span className=\"\">Update</span>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteThisProduct(product._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })} */}\r\n\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8 col-sm-12 col-xs-12\">\r\n              <table className=\"table table-responsive-sm table-hover table-dark table-striped\">\r\n                <caption>List of Products</caption>{\" \"}\r\n                <thead>\r\n                  <tr className=\"text-center\">\r\n                    <th scope=\"col\" className=\"border border-info h4\">\r\n                      Products\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border border-info h4\">\r\n                      Stock\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border border-info h4\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {items &&\r\n                    items.map((product, index) => (\r\n                      <tr key={index} className=\"text-center\">\r\n                        <td className=\"border border-info align-middle\">\r\n                          {product.name}\r\n                        </td>\r\n                        <td className=\"border border-info align-middle\">\r\n                          {product.stock > 0 ? (\r\n                            product.stock\r\n                          ) : (\r\n                            <span className=\"btn btn-danger\">\r\n                              {product.stock}\r\n                            </span>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"border border-info align-middle\">\r\n                          <Link\r\n                            className=\"btn btn-success btn-sm rounded m-1\"\r\n                            to={`/admin/product/update/${product._id}`}\r\n                          >\r\n                            Update{\" \"}\r\n                            <i className=\"far fa-edit d-none d-sm-inline\" />\r\n                          </Link>\r\n                          <Link\r\n                            onClick={() => {\r\n                              deleteThisProduct(product._id);\r\n                            }}\r\n                            className=\"btn btn-danger btn-sm rounded m-1\"\r\n                            to=\"#!\"\r\n                          >\r\n                            Delete{\" \"}\r\n                            <i className=\"far fa-trash-alt d-none d-sm-inline\" />\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ManageProducts;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateProduct.js",["202","203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport {\r\n  getAllCategories,\r\n  getAProduct,\r\n  updateProduct,\r\n} from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getARedirect: false,\r\n    formData: \"\",\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    photo,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getARedirect,\r\n    formData,\r\n  } = values;\r\n\r\n  useEffect(() => {\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  // Preload values of Categories to display in form select option\r\n  const preload = (productId) => {\r\n    getAProduct(productId).then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData(),\r\n        });\r\n        preloadCategories();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Preload Categories\r\n  const preloadCategories = () => {\r\n    getAllCategories().then((data) => {\r\n      if (data.err || data.error) {\r\n        setValues({ ...values, error: data.err ? data.err : data.error });\r\n      } else {\r\n        setValues({\r\n          categories: data,\r\n          formData: new FormData(),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // On Submit Method\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n\r\n    // UPDATE PRoducts\r\n    updateProduct(match.params.productId, user._id, token, formData)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setValues({ ...values, error: data.err });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            stock: \"\",\r\n            photo: \"\",\r\n            loading: false,\r\n            createdProduct: data.name,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    setTimeout(() => {\r\n      setRedirect(true);\r\n    }, 2000);\r\n  };\r\n\r\n  // Handle Change Method\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      {createdProduct} was Updated Successfully!\r\n    </div>\r\n  );\r\n\r\n  // Error Message\r\n  const errorMessage = () => (\r\n    <div\r\n      className=\"alert alert-danger mt-3\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      Failed to Update {createdProduct}!\r\n    </div>\r\n  );\r\n\r\n  // Create Product Form\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Update photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Product Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Product Description</label>\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Price</label>\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Category</label>\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n          required\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((item, index) => (\r\n              <option key={index} value={item._id}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Stock</label>\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-info mb-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Update Product\"\r\n      description=\"Update the Product here.\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <Link to=\"/admin/products\" className=\"btn btn-md btn-dark mb-3 ml-3\">\r\n        Manage Products\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {createProductForm()}\r\n          {redirect && <Redirect to=\"/admin/products\" />}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateCategory.js",["207"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getACategory, updateCategory } from \"./helper/adminapicall\";\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    preload(match.params.categoryId);\r\n  }, []);\r\n\r\n  // Preload - Load the Category\r\n  const preload = (categoryId) => {\r\n    setError(false);\r\n    setSuccess(false);\r\n    getACategory(categoryId)\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setError(data.err ? data.err : data.error);\r\n        } else {\r\n          setError(false);\r\n          setCategory(data.name);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // Handle Form Input Change\r\n  const handleChange = (event) => {\r\n    setError(false);\r\n    setSuccess(false);\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  // On Form Submit\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n\r\n    // Update Category\r\n    updateCategory(match.params.categoryId, user._id, token, { name: category })\r\n      .then((data) => {\r\n        if (data.err || data.error) {\r\n          setError(data.err ? data.err : data.error);\r\n        } else {\r\n          setCategory(data.name);\r\n          setSuccess(true);\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(true);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Success Message\r\n  const successMessage = () => {\r\n    if (success)\r\n      return (\r\n        <div className=\"alert alert-success\">\r\n          {category} updated Successfully!\r\n        </div>\r\n      );\r\n  };\r\n\r\n  // Error Message\r\n  const errorMessage = () => {\r\n    if (error)\r\n      return (\r\n        <div className=\"alert alert-danger\">\r\n          Failed to update {category}!<p>Error: {error}</p>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  // Category Input Form\r\n  const categoryForm = () => {\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <p className=\"lead mt-2\">Update the Category</p>\r\n          <label>Category Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mb-3\"\r\n            onChange={handleChange}\r\n            value={category}\r\n            autoFocus\r\n            required\r\n            placeholder=\"Category\"\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-info\">\r\n            Update Category\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base\r\n      title=\"Update Category\"\r\n      description=\"Update the categroy here\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <div className=\"\">\r\n        <Link className=\"btn btn-md btn-dark mb-3\" to=\"/admin/dashboard\">\r\n          Admin Home\r\n        </Link>\r\n        <Link to=\"/admin/categories\" className=\"btn btn-md btn-dark mb-3 ml-3\">\r\n          Manage Categories\r\n        </Link>\r\n      </div>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-2 my-2\">\r\n          {successMessage()}\r\n          {errorMessage()}\r\n          {categoryForm()}\r\n          {redirect && <Redirect to=\"/admin/categories\" />}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Card.js",["208","209"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\ImageHelper.js",["210"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\cartHelper.js",["211","212"],"// Add Products in Cart\r\nexport const addItemToCart = (item, next) => {\r\n  let cart = [];\r\n  let productExistsInCart = false;\r\n\r\n  if (typeof window !== undefined) {\r\n    // Setting count = 1 for any item to add\r\n    if (!item.count) {\r\n      item.count = 1;\r\n    }\r\n\r\n    // Checking if cart already exists in LocalStorage\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n\r\n      // Trying to find if item is already there\r\n      // If found, incrementing count\r\n      cart.map((product, index) => {\r\n        if (product._id === item._id) {\r\n          if (item.stock <= product.count) {\r\n            alert(\"Can't add More.\");\r\n          } else {\r\n            cart[index].count++;\r\n          }\r\n          productExistsInCart = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // If product Does NOT exists in the cart already, push it in cart\r\n    if (!productExistsInCart) {\r\n      cart.push({\r\n        ...item,\r\n      });\r\n    }\r\n\r\n    // Set cart in Local Storage\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n\r\n// Load Cart Elements\r\nexport const loadCart = () => {\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      return JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n  }\r\n};\r\n\r\n// Remove Item from Cart\r\nexport const removeItemFromCart = (productId) => {\r\n  let cart = [];\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n\r\n    // Removing Item from Cart\r\n    cart.map((product, index) => {\r\n      if (product._id === productId) {\r\n        cart.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Updating into LocalStorage Cart\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n\r\n  return cart;\r\n};\r\n\r\n// Empty Out Cart - to be used after Order Successfull\r\nexport const emptyCart = (next) => {\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n  }\r\n  next();\r\n};\r\n\r\n// Check Cart\r\nexport const checkCart = () => {\r\n  let cart = [];\r\n\r\n  if (typeof window !== undefined) {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n      return cart.length;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Cart.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Payment.js",["213","214","215","216","217"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\orderHelper.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\helper\\paymentHelper.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\ManageOrders.js",["218","219"],"import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n// Components and Methods\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getAllOrders } from \"./helper/adminapicall\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { statusButton } from \"./helper/orderHelper\";\r\n\r\nconst ManageOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const searchText = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    preload();\r\n    /* console.log(\"Reloaded\");\r\n    console.log(\"Filter after Realod: \", filtered);\r\n    if (filtered.length > 0) {\r\n      setItems(filtered);\r\n    } else {\r\n      preload();\r\n      setItems(orders);\r\n    } */\r\n  }, []);\r\n\r\n  // Pre-load All Orders in Orders State\r\n  const preload = () => {\r\n    getAllOrders(user._id, token).then((data) => {\r\n      if (data.err || data.error) {\r\n        console.log(data.err ? data.err : data.error);\r\n      } else {\r\n        setOrders(data);\r\n        setItems(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Set Status Display Button's Outline Color Property based on Status Value\r\n  /* const statusButton = (status) => {\r\n    switch (status.toLowerCase()) {\r\n      case \"recieved\":\r\n        return \"warning\";\r\n        break;\r\n\r\n      case \"processing\":\r\n      case \"shipped\":\r\n        return \"info\";\r\n        break;\r\n\r\n      case \"delivered\":\r\n        return \"success\";\r\n        break;\r\n\r\n      case \"cancelled\":\r\n        return \"danger\";\r\n        break;\r\n\r\n      default:\r\n        return \"info\";\r\n        break;\r\n    }\r\n  }; */\r\n\r\n  // Orders Display Table\r\n  const ordersTable = () => (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\r\n      <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n        <table className=\"table table-responsive-sm table-sm table-hover table-dark table-striped\">\r\n          <caption>List of All Orders</caption>{\" \"}\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th scope=\"col\" className=\"border border-info h4\">\r\n                Orders\r\n              </th>\r\n              <th scope=\"col\" className=\"border border-info h4\">\r\n                User\r\n              </th>\r\n              <th scope=\"col\" className=\"border border-info h4\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\" className=\"border border-info h4\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"border border-info h4\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items &&\r\n              items.map((order, index) => (\r\n                <tr key={index} className=\"text-center\">\r\n                  <td className=\"border border-info align-middle\">\r\n                    {order._id}\r\n                  </td>\r\n                  <td className=\"border border-info align-middle\">\r\n                    {order.user.name + \" \" + order.user.lastName}\r\n                  </td>\r\n                  <td className=\"border border-info align-middle\">\r\n                    {new Date(order.createdAt).toLocaleString()}\r\n                  </td>\r\n                  <td className=\"border border-info align-middle\">\r\n                    {/* <span\r\n                      className={`btn btn-sm rounded btn-outline-${statusButton(\r\n                        order.status\r\n                      )}`}\r\n                    >\r\n                      {order.status}\r\n                    </span> */}\r\n                    {statusButton(order.status)}\r\n                  </td>\r\n                  <td className=\"border border-info align-middle\">\r\n                    {/* <Link\r\n                      className=\"btn btn-success btn-sm m-1\"\r\n                      to={`/admin/order/update/${order._id}`}\r\n                    >\r\n                      Update\r\n                    </Link> */}\r\n                    <Link\r\n                      className=\"btn btn-success rounded m-1\"\r\n                      to={`/admin/order/update/${order._id}`}\r\n                    >\r\n                      <span>\r\n                        Update <i className=\"far fa-edit d-none d-md-inline\" />\r\n                      </span>\r\n                    </Link>\r\n                    {/* <Link\r\n                      onClick={() => {\r\n                        //deleteThisProduct(product._id);\r\n                      }}\r\n                      className=\"btn btn-danger btn-sm m-1\"\r\n                      to=\"#!\"\r\n                    >\r\n                      Delete <i className=\"far fa-trash-alt d-none d-sm-inline\" />\r\n                    </Link> */}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"col-lg-1 col-md-1 col-sm-12 col-xs-12\"></div>\r\n    </div>\r\n  );\r\n\r\n  // Handle Search Field Input Change\r\n  const handleSearchChange = (e) => {\r\n    // console.log(\"Text: \", e.target.value);\r\n    let tempFiltered = [];\r\n    if (e.target.value !== \"\") {\r\n      // Filter Orders\r\n\r\n      // console.log(orders);\r\n      tempFiltered = orders.filter((order) => {\r\n        const regexp = new RegExp(`${e.target.value}`, \"gi\");\r\n        return (\r\n          // order._id.match(regexp) ||\r\n          order.user.name.match(regexp) ||\r\n          order.user.lastName.match(regexp) ||\r\n          order._id.match(regexp) ||\r\n          order.createdAt.match(regexp)\r\n        );\r\n      });\r\n\r\n      setFiltered(tempFiltered);\r\n      setItems(tempFiltered);\r\n      // console.log(\"Filtered: \", filtered);\r\n    } else {\r\n      // Clear Filter\r\n      setFiltered(tempFiltered);\r\n      setItems(orders);\r\n      // console.log(\"Filtered Cleared: \", filtered);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Manage Orders\" description=\"Manage all of your Orders here\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-12\">\r\n          <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n            <span className=\"\">Admin Home</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6 col-sm-12 mt-2 mt-md-0\" align=\"right\">\r\n          <div className=\"col-md-8 col-sm-12\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by Order ID/User/Date(YYYY-MM-DD)...\"\r\n              className=\"form-control transparent text-light\"\r\n              style={{ background: \"rgb(0,0,0,0)\" }}\r\n              ref={searchText}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"mt-2 mb-4\">Manage all Orders ({orders.length}) :</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">{ordersTable()}</div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\cartContext.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\CartState.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\cartReducer.js",["220","221","222"],"import { SET_PRODUCTS_IN_CART } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_PRODUCTS_IN_CART:\r\n      return action.payload;\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\context\\cartNotification\\types.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\UpdateOrder.js",["223"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\admin\\helper\\orderHelper.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\DashboardItem.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\core\\Orders.js",["224"],"import React, { useEffect, useState } from \"react\";\r\n\r\n// Components and Methods\r\nimport Base from \"./Base\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getOrders } from \"./helper/coreapicalls\";\r\nimport { statusButton } from \"../admin/helper/orderHelper\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  // Preload all Orders Data of User in the Orders State\r\n  const preload = () => {\r\n    getOrders(user._id, token).then((data) => {\r\n      if (data.err || data.error) {\r\n        console.log(data.err ? data.err : data.error);\r\n      } else {\r\n        setOrders(data);\r\n        // console.log(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Orders\r\n  const displayOrders = () => (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          {orders.map((order, index) => (\r\n            <div className=\"row\" key={index}>\r\n              <div className=\"col-sm-10 offset-sm-1\">\r\n                <div\r\n                  class=\"card border-info my-3\"\r\n                  style={{ background: \"rgb(0,0,0,0)\" }}\r\n                >\r\n                  <div class=\"card-header\">\r\n                    Order <span className=\"text-info\">#{order._id}</span>\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 col-sm-12\">\r\n                        <div className=\"col\">\r\n                          <h5 class=\"card-title\">\r\n                            Order Status: {statusButton(order.status)}\r\n                          </h5>\r\n                          <p class=\"card-text\">\r\n                            <span className=\"text-muted\">Order Date:</span>{\" \"}\r\n                            {new Date(order.createdAt).toLocaleString()} <br />\r\n                            <span className=\"text-muted\">Total: $</span>{\" \"}\r\n                            {order.amount}\r\n                            <br />\r\n                            <span className=\"text-muted\">\r\n                              Transaction ID:\r\n                            </span>{\" \"}\r\n                            {order.transaction_id}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 col-sm-12 mt-4 mt-md-0\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col\">\r\n                            <h5 class=\"card-title\">\r\n                              Item(s) Ordered: {order.products.length}\r\n                            </h5>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          {order.products.map((product, index) => (\r\n                            <div className=\"col-lg-6 col-md-12\" key={index}>\r\n                              <div\r\n                                className=\"card border-light my-2 mx-1\"\r\n                                style={{ background: \"rgb(0,0,0,0)\" }}\r\n                              >\r\n                                {/* <div class=\"card-header\"></div> */}\r\n                                <div class=\"card-body\">\r\n                                  <h5 class=\"card-title\">{product.name}</h5>\r\n                                  <p class=\"card-text\">\r\n                                    <span className=\"text-muted\">Price:</span>{\" \"}\r\n                                    {product.price}\r\n                                    <br />\r\n                                    <span className=\"text-muted\">\r\n                                      Items Bought:\r\n                                    </span>{\" \"}\r\n                                    {product.count}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Base title=\"Orders\" description=\"Check all of your orders\">\r\n      <h3>Your Orders ({orders && orders.length}):</h3>\r\n      {orders.length > 0 ? displayOrders() : \"Loading...\"}\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\DashboardItems.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Profile.js",["225","226","227","228"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\helper\\userapicalls.js",[],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\Address.js",["229"],"F:\\Development\\mern-stack\\ecom\\projfrontend\\src\\user\\AddNewAddress.js",["230","231","232","233","234","235","236","237"],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":11,"column":10,"nodeType":"244","messageId":"245","endLine":11,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":26,"column":6,"nodeType":"248","endLine":26,"endColumn":8,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":150,"column":17,"nodeType":"252","endLine":150,"endColumn":32},{"ruleId":"242","severity":1,"message":"253","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":14},{"ruleId":"242","severity":1,"message":"254","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"254","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"255","line":11,"column":26,"nodeType":"244","messageId":"245","endLine":11,"endColumn":30},{"ruleId":"242","severity":1,"message":"256","line":11,"column":10,"nodeType":"244","messageId":"245","endLine":11,"endColumn":18},{"ruleId":"242","severity":1,"message":"257","line":32,"column":5,"nodeType":"244","messageId":"245","endLine":32,"endColumn":10},{"ruleId":"242","severity":1,"message":"258","line":34,"column":5,"nodeType":"244","messageId":"245","endLine":34,"endColumn":13},{"ruleId":"242","severity":1,"message":"259","line":35,"column":5,"nodeType":"244","messageId":"245","endLine":35,"endColumn":12},{"ruleId":"242","severity":1,"message":"260","line":38,"column":5,"nodeType":"244","messageId":"245","endLine":38,"endColumn":17},{"ruleId":"246","severity":1,"message":"261","line":44,"column":6,"nodeType":"248","endLine":44,"endColumn":8,"suggestions":"262"},{"ruleId":"242","severity":1,"message":"256","line":11,"column":10,"nodeType":"244","messageId":"245","endLine":11,"endColumn":18},{"ruleId":"242","severity":1,"message":"257","line":37,"column":5,"nodeType":"244","messageId":"245","endLine":37,"endColumn":10},{"ruleId":"242","severity":1,"message":"258","line":39,"column":5,"nodeType":"244","messageId":"245","endLine":39,"endColumn":13},{"ruleId":"242","severity":1,"message":"259","line":40,"column":5,"nodeType":"244","messageId":"245","endLine":40,"endColumn":12},{"ruleId":"242","severity":1,"message":"260","line":43,"column":5,"nodeType":"244","messageId":"245","endLine":43,"endColumn":17},{"ruleId":"246","severity":1,"message":"263","line":49,"column":6,"nodeType":"248","endLine":49,"endColumn":8,"suggestions":"264"},{"ruleId":"246","severity":1,"message":"265","line":20,"column":6,"nodeType":"248","endLine":20,"endColumn":8,"suggestions":"266"},{"ruleId":"242","severity":1,"message":"267","line":1,"column":29,"nodeType":"244","messageId":"245","endLine":1,"endColumn":38},{"ruleId":"242","severity":1,"message":"268","line":1,"column":40,"nodeType":"244","messageId":"245","endLine":1,"endColumn":48},{"ruleId":"269","severity":1,"message":"270","line":11,"column":7,"nodeType":"271","endLine":16,"endColumn":9},{"ruleId":"272","severity":1,"message":"273","line":18,"column":33,"nodeType":"274","messageId":"275","endLine":18,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":61,"column":31,"nodeType":"274","messageId":"275","endLine":61,"endColumn":33},{"ruleId":"242","severity":1,"message":"276","line":9,"column":21,"nodeType":"244","messageId":"245","endLine":9,"endColumn":29},{"ruleId":"246","severity":1,"message":"277","line":36,"column":6,"nodeType":"248","endLine":36,"endColumn":8,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":119,"column":11,"nodeType":"271","endLine":119,"endColumn":15},{"ruleId":"242","severity":1,"message":"281","line":129,"column":9,"nodeType":"244","messageId":"245","endLine":129,"endColumn":17},{"ruleId":"272","severity":1,"message":"273","line":173,"column":30,"nodeType":"274","messageId":"275","endLine":173,"endColumn":32},{"ruleId":"242","severity":1,"message":"256","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":18},{"ruleId":"246","severity":1,"message":"261","line":29,"column":6,"nodeType":"248","endLine":29,"endColumn":8,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":3,"column":1,"nodeType":"285","endLine":13,"endColumn":3},{"ruleId":"286","severity":1,"message":"287","line":7,"column":7,"nodeType":"288","messageId":"289","endLine":7,"endColumn":13},{"ruleId":"286","severity":1,"message":"287","line":11,"column":7,"nodeType":"288","messageId":"289","endLine":11,"endColumn":13},{"ruleId":"246","severity":1,"message":"261","line":22,"column":6,"nodeType":"248","endLine":22,"endColumn":8,"suggestions":"290"},{"ruleId":"246","severity":1,"message":"261","line":16,"column":6,"nodeType":"248","endLine":16,"endColumn":8,"suggestions":"291"},{"ruleId":"246","severity":1,"message":"261","line":45,"column":6,"nodeType":"248","endLine":45,"endColumn":8,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":159,"column":23,"nodeType":"295","messageId":"296","endLine":159,"endColumn":25},{"ruleId":"242","severity":1,"message":"297","line":173,"column":9,"nodeType":"244","messageId":"245","endLine":173,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":189,"column":44,"nodeType":"295","messageId":"296","endLine":189,"endColumn":46},{"ruleId":"246","severity":1,"message":"261","line":14,"column":6,"nodeType":"248","endLine":14,"endColumn":8,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"294","line":54,"column":21,"nodeType":"295","messageId":"296","endLine":54,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":55,"column":20,"nodeType":"295","messageId":"296","endLine":55,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":56,"column":23,"nodeType":"295","messageId":"296","endLine":56,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":57,"column":20,"nodeType":"295","messageId":"296","endLine":57,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":58,"column":24,"nodeType":"295","messageId":"296","endLine":58,"endColumn":26},{"ruleId":"293","severity":1,"message":"294","line":59,"column":21,"nodeType":"295","messageId":"296","endLine":59,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":60,"column":23,"nodeType":"295","messageId":"296","endLine":60,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":61,"column":23,"nodeType":"295","messageId":"296","endLine":61,"endColumn":25},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setProductsInCart'. Either include it or remove the dependency array.","ArrayExpression",["301"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Link' is defined but never used.","'Children' is defined but never used.","'role' is assigned a value but never used.","'filtered' is assigned a value but never used.","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getARedirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["303"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["304"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loadCart' is defined but never used.","React Hook useEffect has missing dependencies: 'preload', 'token', and 'userId'. Either include them or remove the dependency array.",["305"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'getNonce' is assigned a value but never used.",["306"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["307"],["308"],["309"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loadUserPhoto' is assigned a value but never used.",["310"],"no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"313","fix":"321"},{"desc":"313","fix":"322"},{"desc":"313","fix":"323"},{"desc":"313","fix":"324"},{"desc":"313","fix":"325"},"Update the dependencies array to be: [setProductsInCart]",{"range":"326","text":"327"},"Update the dependencies array to be: [preload]",{"range":"328","text":"329"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"330","text":"331"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"332","text":"333"},"Update the dependencies array to be: [preload, token, userId]",{"range":"334","text":"335"},{"range":"336","text":"329"},{"range":"337","text":"329"},{"range":"338","text":"329"},{"range":"339","text":"329"},{"range":"340","text":"329"},[784,786],"[setProductsInCart]",[892,894],"[preload]",[1012,1014],"[match.params.productId, preload]",[661,663],"[match.params.categoryId]",[1202,1204],"[preload, token, userId]",[835,837],[660,662],[437,439],[997,999],[404,406]]